# ==============================
# OMEGA_PLR - plr_omega.cfg
# ==============================
# Sistema de recuperacao de impressÃƒÂ£o apos queda de energia
# Usa saved_variables.cfg como primario
# Usa omega_resume.log como backup redundante
# ==============================

[force_move]
enable_force_move: True

[delayed_gcode KINEMATIC_POSITION]
initial_duration:0.2
gcode:
    SET_KINEMATIC_POSITION X=0
    SET_KINEMATIC_POSITION Y=0
    SET_KINEMATIC_POSITION Z=0

[respond]
default_type: echo

# --------------------------------------
# G31_OMEGA
# Chamado no inicio/fim da impressao pelo slicer
# Limpa dados de PLR e garante estado consistente
# --------------------------------------
[gcode_macro G31_OMEGA]
gcode:
    RUN_SHELL_COMMAND CMD=clear_plr_omega

[gcode_shell_command clear_plr_omega]
command: sh /home/mks/OMEGA_PLR/clear_plr_omega.sh
timeout: 5.

# --------------------------------------
# Salva ultimo arquivo e caminho
# Atualiza tanto no saved_variables.cfg quanto no backup redundante
# --------------------------------------
[gcode_macro save_last_file_omega]
gcode:
    {% set filepath = printer.virtual_sdcard.file_path %}
    {% set filename = filepath.split('/') %}

    SAVE_VARIABLE VARIABLE=last_file VALUE="'{filename[-1]}'"
    SAVE_VARIABLE VARIABLE=filepath VALUE="'{printer.virtual_sdcard.file_path}'"

    RUN_SHELL_COMMAND CMD=omega_save PARAMS="0 {printer.virtual_sdcard.file_path}"

[gcode_macro clear_last_file_omega]
gcode:
    SAVE_VARIABLE VARIABLE=last_file VALUE="''"
    SAVE_VARIABLE VARIABLE=filepath VALUE="''"

# --------------------------------------
# Comando que chama o shell script de reconstrucao
# --------------------------------------
[gcode_shell_command POWER_LOSS_RESUME_OMEGA]
command: sh /home/mks/OMEGA_PLR/plr_omega.sh
timeout: 420.

# --------------------------------------
# Macro de retomada apos falha
# Usa saved_variables se disponivel
# Se vazio, busca dados no omega_resume.log via helper
# --------------------------------------
[gcode_macro RESUME_INTERRUPTED_OMEGA]
gcode:
    SET_GCODE_OFFSET Z=0 MOVE=0
    {% set z_height = params.Z_HEIGHT|default(printer.save_variables.variables.power_resume_z)|float %}
    {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.last_file)|string %}

    M118 Retomando arquivo com OMEGA_PLR: _RESUME_OMEGA.gcode (Z={z_height})

    RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME_OMEGA PARAMS="{z_height} \"{last_file}\""
    SDCARD_PRINT_FILE FILENAME="plr/_RESUME_OMEGA.gcode"

# --------------------------------------
# Atualiza altura atual de Z
# Salva no saved_variables.cfg e no backup redundante
# --------------------------------------
[gcode_macro LOG_Z_OMEGA]
gcode:
    {% set z_pos = printer.gcode_move.gcode_position.z %}
    RESPOND MSG="Current Z is {z_pos}"
    SAVE_VARIABLE VARIABLE=power_resume_z VALUE={z_pos}

    {% set filepath = printer.save_variables.variables.filepath|default('') %}
    {% if filepath != '' %}
      RUN_SHELL_COMMAND CMD=omega_save PARAMS="{z_pos} {filepath}"
    {% endif %}

# --------------------------------------
# Comando de shell para salvar estado redundante
# --------------------------------------
[gcode_shell_command omega_save]
command: sh /home/mks/OMEGA_PLR/omega_save.sh
timeout: 5.

# --------------------------------------
# Helper que le o Ultimo arquivo salvo no backup (omega_resume.log)
# Usado como fallback se o saved_variables.cfg estiver vazio
# --------------------------------------
[gcode_macro OMEGA_RESUME_HELPER]
variable_last_file: ""
gcode:
    {% set last_file = printer["shell_command output"].last_file|default('') %}
    SET_GCODE_VARIABLE MACRO=OMEGA_RESUME_HELPER VARIABLE=last_file VALUE="{last_file}"

[gcode_shell_command omega_resume_helper]
command: awk -F= '/^last_file=/{print substr($0, index($0,$2))}' /home/mks/OMEGA_PLR/omega_resume.log
timeout: 5.

# --------------------------------------
# Arquivo padrao do Klipper para variaveis persistentes
# --------------------------------------
[save_variables]
filename = /home/mks/printer_data/config/saved_variables.cfg
